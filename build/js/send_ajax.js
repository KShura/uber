var Form = (function () {
    function Form(form, url, dataArray, form_type) {
        this.form = form;
        this.url = url;
        this.dataArray = dataArray;
        this.form_type = form_type;
    }
    Form.prototype.validation = function () {
        var valid = true;
        $.each($(this.form).find('input.required'), function (i, val) {
            var a = $(this).val();
            if ($(this).val() == "") {
                valid = false;
                $(this).css('border', '2px solid #d02121');
                if ($(this).closest('.field').find('p').is(".error_message")) {
                    $(this).closest('.field').find('.error_message').show();
                }
            }
            else {
                $(this).css('border', '');
                if ($(this).closest('.field').find('p').is(".error_message")) {
                    $(this).closest('.field').find('.error_message').hide();
                }
            }
        });
        if ($(this.form).find('input').is('input[name="check"]')) {
            if (!$(this.form).find('input[name="check"]').prop("checked")) {
                $(this.form).find('input[name="check"] + span.checkbox').css('border', '2px solid #d02121');
                $(this.form).find('.check_desc').css('textDecoration', 'underline');
            }
            else {
                $(this.form).find('.check_desc').css('textDecoration', '');
                $(this.form).find('input[name="check"] + span.checkbox').css('border', '');
            }
        }
        return valid;
    };
    Form.prototype.ajax = function () {
        var valid = this.validation();
        if (valid) {
            $.ajax({
                type: "POST",
                url: this.url,
                processData: false,
                contentType: false,
                data: this.dataArray
            }).done(function (res) {
                if (res) {
                    showSuccess(this.form_type);
                }
            }).fail(function (res) {
                console.log(res);
            });
        }
    };
    return Form;
}());
$(function () {
    $('form').submit(function (e) {
        e.preventDefault();
        var dataArray = $(this).serializeArray();
        var form_type = $(this).attr('form-type');
        var url = $(this).attr('action');
        var form = new Form(this, url, dataArray, form_type);
        var formData = new FormData(this);
        var response = form.ajax();
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QyxjQUFjLEVBQUUsQ0FBQztRQUN6QyxJQUFJLFNBQVMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzFDLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakMsSUFBSSxJQUFJLEdBQVEsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDMUQsSUFBSSxRQUFRLEdBQUcsSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEMsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdCLENBQUMsQ0FBQyxDQUFDO0FBQ1QsQ0FBQyxDQUFDLENBQUMiLCJmaWxlIjoic2VuZF9hamF4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cInBvcHVwcy50c1wiIC8+XHJcbmludGVyZmFjZSBpRm9ybSB7XHJcbiAgZm9ybTogSFRNTEZvcm1FbGVtZW50O1xyXG4gIHVybDogc3RyaW5nO1xyXG4gIGRhdGFBcnJheTogYW55W107XHJcbiAgZm9ybV90eXBlOiBzdHJpbmc7XHJcbiAgdmFsaWRhdGlvbigpOiBib29sZWFuO1xyXG4gIGFqYXgoKTogdm9pZDtcclxufVxyXG5cclxuY2xhc3MgRm9ybSBpbXBsZW1lbnRzIGlGb3JtIHtcclxuICBmb3JtOiBIVE1MRm9ybUVsZW1lbnQ7XHJcbiAgdXJsOnN0cmluZztcclxuICBkYXRhQXJyYXk6IGFueVtdO1xyXG4gIGZvcm1fdHlwZTogc3RyaW5nO1xyXG4gIGNvbnN0cnVjdG9yIChmb3JtOkhUTUxGb3JtRWxlbWVudCwgdXJsOnN0cmluZywgZGF0YUFycmF5OmFueSwgZm9ybV90eXBlOnN0cmluZykge1xyXG4gICAgdGhpcy5mb3JtID0gZm9ybTtcclxuICAgIHRoaXMudXJsID0gdXJsO1xyXG4gICAgdGhpcy5kYXRhQXJyYXkgPSBkYXRhQXJyYXk7XHJcbiAgICB0aGlzLmZvcm1fdHlwZSA9IGZvcm1fdHlwZTtcclxuICB9XHJcblxyXG4gIHZhbGlkYXRpb24oKSA6IGJvb2xlYW4ge1xyXG4gICAgbGV0IHZhbGlkOmJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgICQuZWFjaCgkKHRoaXMuZm9ybSkuZmluZCgnaW5wdXQucmVxdWlyZWQnKSwgZnVuY3Rpb24oaSwgdmFsKSB7XHJcbiAgICAgIC8vYWxlcnQoJCh0aGlzKS5hdHRyKCduYW1lJykgKyBcIiBcIiArJCh0aGlzKS52YWwoKSlcclxuICAgICAgbGV0IGEgPSAkKHRoaXMpLnZhbCgpO1xyXG4gICAgICBpZigkKHRoaXMpLnZhbCgpID09IFwiXCIpIHtcclxuICAgICAgICB2YWxpZCA9IGZhbHNlOyBcclxuICAgICAgICAkKHRoaXMpLmNzcygnYm9yZGVyJywgJzJweCBzb2xpZCAjZDAyMTIxJyk7XHJcbiAgICAgICAgaWYgKCQodGhpcykuY2xvc2VzdCgnLmZpZWxkJykuZmluZCgncCcpLmlzKFwiLmVycm9yX21lc3NhZ2VcIikpIHsgXHJcbiAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJy5maWVsZCcpLmZpbmQoJy5lcnJvcl9tZXNzYWdlJykuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAkKHRoaXMpLmNzcygnYm9yZGVyJywgJycpOyBcclxuICAgICAgICBpZiAgKCQodGhpcykuY2xvc2VzdCgnLmZpZWxkJykuZmluZCgncCcpLmlzKFwiLmVycm9yX21lc3NhZ2VcIikpIHsgXHJcbiAgICAgICAgICAkKHRoaXMpLmNsb3Nlc3QoJy5maWVsZCcpLmZpbmQoJy5lcnJvcl9tZXNzYWdlJykuaGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgIH0pO1xyXG5cclxuICAgICBpZigkKHRoaXMuZm9ybSkuZmluZCgnaW5wdXQnKS5pcygnaW5wdXRbbmFtZT1cImNoZWNrXCJdJykpIHtcclxuICAgICAgIGlmKCEkKHRoaXMuZm9ybSkuZmluZCgnaW5wdXRbbmFtZT1cImNoZWNrXCJdJykucHJvcChcImNoZWNrZWRcIikpIHtcclxuICAgICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoJ2lucHV0W25hbWU9XCJjaGVja1wiXSArIHNwYW4uY2hlY2tib3gnKS5jc3MoJ2JvcmRlcicsICcycHggc29saWQgI2QwMjEyMScpO1xyXG4gICAgICAgICAkKHRoaXMuZm9ybSkuZmluZCgnLmNoZWNrX2Rlc2MnKS5jc3MoJ3RleHREZWNvcmF0aW9uJywgJ3VuZGVybGluZScpO1xyXG4gICAgICAgfSBlbHNlIHsgICAgICAgICBcclxuICAgICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoJy5jaGVja19kZXNjJykuY3NzKCd0ZXh0RGVjb3JhdGlvbicsICcnKTtcclxuICAgICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoJ2lucHV0W25hbWU9XCJjaGVja1wiXSArIHNwYW4uY2hlY2tib3gnKS5jc3MoJ2JvcmRlcicsICcnKTtcclxuICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgcmV0dXJuIHZhbGlkO1xyXG4gIH1cclxuXHJcbiAgYWpheCgpOiB2b2lkIHtcclxuXHJcbiAgICBsZXQgdmFsaWQ6Ym9vbGVhbiA9IHRoaXMudmFsaWRhdGlvbigpO1xyXG4gICAgaWYodmFsaWQpIHtcclxuICAgICAgJC5hamF4KHtcclxuICAgICAgICB0eXBlOiBcIlBPU1RcIixcclxuICAgICAgICB1cmw6IHRoaXMudXJsLFxyXG4gICAgICAgIHByb2Nlc3NEYXRhOiBmYWxzZSxcclxuICAgICAgICBjb250ZW50VHlwZTogZmFsc2UsXHJcbiAgICAgICAgZGF0YTogdGhpcy5kYXRhQXJyYXlcclxuICAgICAgfSkuZG9uZShmdW5jdGlvbihyZXMpIHtcclxuICAgICAgICBpZihyZXMpIHtcclxuICAgICAgICAgIHNob3dTdWNjZXNzKHRoaXMuZm9ybV90eXBlKTsgICBcclxuICAgICAgICB9ICAgICAgICAgIFxyXG4gICAgICB9KS5mYWlsKGZ1bmN0aW9uKHJlcykge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAgICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4kKGZ1bmN0aW9uKCkge1xyXG4gICAgICAkKCdmb3JtJykuc3VibWl0KGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxyXG4gICAgICBcclxuICAgICAgICBsZXQgZGF0YUFycmF5ID0gJCh0aGlzKS5zZXJpYWxpemVBcnJheSgpO1xyXG4gICAgICAgIGxldCBmb3JtX3R5cGUgPSAkKHRoaXMpLmF0dHIoJ2Zvcm0tdHlwZScpO1xyXG4gICAgICAgIGxldCB1cmwgPSAkKHRoaXMpLmF0dHIoJ2FjdGlvbicpO1xyXG4gICAgICAgIGxldCBmb3JtOkZvcm0gPSBuZXcgRm9ybSh0aGlzLCB1cmwsIGRhdGFBcnJheSwgZm9ybV90eXBlKTtcclxuICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEodGhpcyk7XHJcbiAgICAgICAgbGV0IHJlc3BvbnNlID0gZm9ybS5hamF4KCk7XHJcbiAgICAgIH0pO1xyXG59KTsgICAgICAiXSwic291cmNlUm9vdCI6Ii9zcmMvdHMifQ==
