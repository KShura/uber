var Form = (function () {
    function Form(form, url, dataArray, type) {
        this.form = form;
        this.url = url;
        this.dataArray = dataArray;
        this.type = type;
    }
    Form.prototype.validation = function (type, name, phone, text, email) {
        var valid_name = false;
        var valid_phone = false;
        var valid_text = false;
        var valid_email = false;
        if (phone != "" || type == "catalog") {
            valid_phone = true;
        }
        if (name != "" || type == "catalog") {
            valid_name = true;
        }
        if (text != "") {
            valid_text = true;
        }
        var pattern_email = /^([a-z0-9_\.-])+@[a-z0-9-]+\.([a-z]{2,4}\.)?[a-z]{2,4}$/i;
        if (pattern_email.test(email) || type != "catalog") {
            valid_email = true;
        }
        if (!valid_name) {
            $(this.form).find("input[name='name']").css('border', '2px solid red');
            $(this.form).find("input[name='name']+.error").css('display', 'block');
        }
        else {
            $(this.form).find("input[name='name']").css('border', '');
            $(this.form).find("input[name='name']+.error").css('display', 'none');
        }
        if (!valid_phone) {
            $(this.form).find("input[name='phone']").css('border', '2px solid red');
            $(this.form).find("input[name='phone']+.error").css('display', 'block');
        }
        else {
            $(this.form).find("input[name='phone']").css('border', '');
            $(this.form).find("input[name='phone']+.error").css('display', 'none');
        }
        if (!valid_text) {
            $(this.form).find("textarea").css('border', '2px solid red');
            $(this.form).find("textarea+.error").css('display', 'block');
        }
        else {
            $(this.form).find("textarea").css('border', '');
            $(this.form).find("textarea+.error").css('display', 'none');
        }
        if (!valid_email) {
            $(this.form).find("input[name='email']").css('border', '2px solid red');
            $(this.form).find("input[name='email']+.error").css('display', 'block');
        }
        else {
            $(this.form).find("input[name='email']").css('border', '');
            $(this.form).find("input[name='email']+.error").css('display', 'none');
        }
        var check = false;
        if ($(this.form).find("input[name='check']").prop("checked")) {
            check = true;
            $(this.form).find("input[name='check'] + span").css('border', '1px solid #a4a9ae');
            $(this.form).find(".checkbox_text").css('textDecoration', 'none');
        }
        else {
            $(this.form).find("input[name='check'] + span").css('border', '1px solid red');
            $(this.form).find(".checkbox_text").css('textDecoration', 'underline');
        }
        return valid_name && valid_phone && valid_text && valid_email && check;
    };
    Form.prototype.ajax = function (formData) {
        var response;
        formData.append('type', this.gettype());
        var name;
        if ($(this.form).find("input[name='name']").length != 0) {
            name = $(this.form).find("input[name='name']").val();
        }
        else {
            name = "no name";
        }
        var text;
        if ($(this.form).find("textarea").length != 0) {
            text = $(this.form).find("textarea").val();
        }
        else {
            text = "no text";
        }
        var email;
        if ($(this.form).find("input[name='email']").length != 0) {
            email = $(this.form).find("input[name='email']").val();
        }
        else {
            email = "no email";
        }
        var phone = $(this.form).find("input[name='phone']").val();
        var valid = this.validation($(this.form).attr('name'), name, phone, text, email);
        if (valid) {
            $.ajax({
                type: "POST",
                url: this.url,
                processData: false,
                contentType: false,
                data: formData
            }).done(function (res) {
                var obj = jQuery.parseJSON(res);
                var type = obj.type;
                var dataArray = this.dataArray;
                switch (type) {
                    case "Обратный звонок":
                        showSuccessCallback();
                        break;
                    case "Новый заказ":
                        var gift = obj.gift;
                        var item = obj.item;
                        var price = obj.price;
                        var image = obj.image;
                        showSuccessOrder(name, gift, item, image, price);
                        $("form[name='order']").trigger('reset');
                        break;
                    case "Заказ каталога":
                        showSuccessCatalog();
                        $("form[name='catalog']").trigger('reset');
                        break;
                    case "Форма внизу страницы":
                        showSuccess();
                        $("form[name='bottom_form']").trigger('reset');
                        break;
                    case "Отзыв":
                        showSuccessReview();
                        $("form[name='review']").trigger('reset');
                        break;
                }
            }).fail(function (res) {
                console.log(res);
            });
        }
        return response;
    };
    Form.prototype.gettype = function () {
        var type;
        switch (this.type) {
            case "callback":
                type = "Обратный звонок";
                break;
            case "order_main":
                type = "Заказ с баннера";
                break;
            case "order":
                type = "Новый заказ";
                break;
            case "catalog":
                type = "Заказ каталога";
                break;
            case "bottom_form":
                type = "Форма внизу страницы";
                break;
            case "review":
                type = "Отзыв";
                break;
        }
        return type;
    };
    return Form;
}());
$(function () {
    $('form').submit(function (e) {
        e.preventDefault();
        var dataArray = $(this).serializeArray();
        var type = $(this).attr('name');
        var url = $(this).attr('action');
        var form = new Form(this, url, dataArray, type);
        var formData = new FormData(this);
        var response = form.ajax(formData);
    });
    $('input[type="file"]').change(function () {
        var val = $(this).val();
        var regV = /[^\\/]+\.[A-Za-z]+/gi;
        var result = val.match(regV);
        if (result != null) {
            $(this).siblings('span').html(result);
        }
        else {
            $(this).siblings('span').html('Добавить фото');
        }
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,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LE1BQU0sQ0FBQztRQUM3QixJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDeEIsSUFBSSxJQUFJLEdBQUcsc0JBQXNCLENBQUM7UUFDbEMsSUFBSSxNQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QixFQUFFLENBQUEsQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQztZQUNsQixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUN4QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNqRCxDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDVCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJzZW5kX2FqYXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwicG9wdXBzLnRzXCIgLz5cclxuaW50ZXJmYWNlIGlGb3JtIHtcclxuICBmb3JtOiBIVE1MRm9ybUVsZW1lbnQ7XHJcbiAgdXJsOiBzdHJpbmc7XHJcbiAgZGF0YUFycmF5OiBhbnlbXTtcclxuICB0eXBlOiBzdHJpbmc7XHJcbiAgdmFsaWRhdGlvbih0eXBlOnN0cmluZywgbmFtZTpzdHJpbmcsIHBob25lOnN0cmluZywgdGV4dDpzdHJpbmcsIGVtYWlsOnN0cmluZyk6IGJvb2xlYW47XHJcbiAgYWpheChmb3JtRGF0YTphbnkpOiBKUXVlcnlyZXNwb25zZTtcclxuICBnZXR0eXBlKHR5cGU6c3RyaW5nKTogc3RyaW5nO1xyXG59XHJcblxyXG5pbnRlcmZhY2UgSlF1ZXJ5cmVzcG9uc2UgeyBcclxuICByZXNwb25zZUpTT04/OiBhbnk7XHJcbn1cclxuXHJcbmNsYXNzIEZvcm0gaW1wbGVtZW50cyBpRm9ybSB7XHJcbiAgZm9ybTogSFRNTEZvcm1FbGVtZW50O1xyXG4gIHVybDpzdHJpbmc7XHJcbiAgZGF0YUFycmF5OiBhbnlbXTtcclxuICB0eXBlOiBzdHJpbmc7XHJcbiAgY29uc3RydWN0b3IgKGZvcm06SFRNTEZvcm1FbGVtZW50LCB1cmw6c3RyaW5nLCBkYXRhQXJyYXk6YW55LCB0eXBlOnN0cmluZykge1xyXG4gICAgdGhpcy5mb3JtID0gZm9ybTtcclxuICAgIHRoaXMudXJsID0gdXJsO1xyXG4gICAgdGhpcy5kYXRhQXJyYXkgPSBkYXRhQXJyYXk7XHJcbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xyXG4gIH1cclxuXHJcbiAgdmFsaWRhdGlvbih0eXBlOnN0cmluZywgbmFtZTpzdHJpbmcsIHBob25lOnN0cmluZywgdGV4dDpzdHJpbmcsIGVtYWlsOnN0cmluZykgOiBib29sZWFuIHtcclxuICAgIGxldCB2YWxpZF9uYW1lOmJvb2xlYW4gPSBmYWxzZTtcclxuICAgIGxldCB2YWxpZF9waG9uZTpib29sZWFuID0gZmFsc2U7XHJcbiAgICBsZXQgdmFsaWRfdGV4dDpib29sZWFuID0gZmFsc2U7XHJcbiAgICBsZXQgdmFsaWRfZW1haWw6Ym9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIGlmIChwaG9uZSAhPSBcIlwiIHx8IHR5cGUgPT0gXCJjYXRhbG9nXCIpIHtcclxuICAgICAgdmFsaWRfcGhvbmUgPSB0cnVlO1xyXG4gICAgfSBcclxuXHJcbiAgICBpZiAobmFtZSAhPSBcIlwiIHx8IHR5cGUgPT0gXCJjYXRhbG9nXCIpIHtcclxuICAgICAgdmFsaWRfbmFtZSA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHRleHQgIT0gXCJcIikge1xyXG4gICAgICB2YWxpZF90ZXh0ID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgcGF0dGVybl9lbWFpbCA9IC9eKFthLXowLTlfXFwuLV0pK0BbYS16MC05LV0rXFwuKFthLXpdezIsNH1cXC4pP1thLXpdezIsNH0kL2k7XHJcbiAgICBpZihwYXR0ZXJuX2VtYWlsLnRlc3QoZW1haWwpIHx8IHR5cGUgIT0gXCJjYXRhbG9nXCIgKSB7XHJcbiAgICAgIHZhbGlkX2VtYWlsID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBpZighdmFsaWRfbmFtZSkgeyAgICAgICAgICAgIFxyXG4gICAgICAkKHRoaXMuZm9ybSkuZmluZChcImlucHV0W25hbWU9J25hbWUnXVwiKS5jc3MoJ2JvcmRlcicsICcycHggc29saWQgcmVkJyk7XHJcbiAgICAgICQodGhpcy5mb3JtKS5maW5kKFwiaW5wdXRbbmFtZT0nbmFtZSddKy5lcnJvclwiKS5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICQodGhpcy5mb3JtKS5maW5kKFwiaW5wdXRbbmFtZT0nbmFtZSddXCIpLmNzcygnYm9yZGVyJywgJycpO1xyXG4gICAgICAkKHRoaXMuZm9ybSkuZmluZChcImlucHV0W25hbWU9J25hbWUnXSsuZXJyb3JcIikuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgIH1cclxuICAgICAgICBcclxuICAgIGlmKCF2YWxpZF9waG9uZSkge1xyXG4gICAgICAkKHRoaXMuZm9ybSkuZmluZChcImlucHV0W25hbWU9J3Bob25lJ11cIikuY3NzKCdib3JkZXInLCAnMnB4IHNvbGlkIHJlZCcpO1xyXG4gICAgICAkKHRoaXMuZm9ybSkuZmluZChcImlucHV0W25hbWU9J3Bob25lJ10rLmVycm9yXCIpLmNzcygnZGlzcGxheScsICdibG9jaycpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdwaG9uZSddXCIpLmNzcygnYm9yZGVyJywgJycpO1xyXG4gICAgICAkKHRoaXMuZm9ybSkuZmluZChcImlucHV0W25hbWU9J3Bob25lJ10rLmVycm9yXCIpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYoIXZhbGlkX3RleHQpIHtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJ0ZXh0YXJlYVwiKS5jc3MoJ2JvcmRlcicsICcycHggc29saWQgcmVkJyk7XHJcbiAgICAgICQodGhpcy5mb3JtKS5maW5kKFwidGV4dGFyZWErLmVycm9yXCIpLmNzcygnZGlzcGxheScsICdibG9jaycpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJ0ZXh0YXJlYVwiKS5jc3MoJ2JvcmRlcicsICcnKTtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJ0ZXh0YXJlYSsuZXJyb3JcIikuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgIH1cclxuXHJcbiAgICBpZighdmFsaWRfZW1haWwpIHtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdlbWFpbCddXCIpLmNzcygnYm9yZGVyJywgJzJweCBzb2xpZCByZWQnKTtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdlbWFpbCddKy5lcnJvclwiKS5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICQodGhpcy5mb3JtKS5maW5kKFwiaW5wdXRbbmFtZT0nZW1haWwnXVwiKS5jc3MoJ2JvcmRlcicsICcnKTtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdlbWFpbCddKy5lcnJvclwiKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBjaGVjazpib29sZWFuID0gZmFsc2U7XHJcblxyXG4gICAgaWYoJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdjaGVjayddXCIpLnByb3AoXCJjaGVja2VkXCIpKSB7XHJcbiAgICAgIGNoZWNrID0gdHJ1ZTtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdjaGVjayddICsgc3BhblwiKS5jc3MoJ2JvcmRlcicsICcxcHggc29saWQgI2E0YTlhZScpO1xyXG4gICAgICAkKHRoaXMuZm9ybSkuZmluZChcIi5jaGVja2JveF90ZXh0XCIpLmNzcygndGV4dERlY29yYXRpb24nLCAnbm9uZScpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdjaGVjayddICsgc3BhblwiKS5jc3MoJ2JvcmRlcicsICcxcHggc29saWQgcmVkJyk7XHJcbiAgICAgICQodGhpcy5mb3JtKS5maW5kKFwiLmNoZWNrYm94X3RleHRcIikuY3NzKCd0ZXh0RGVjb3JhdGlvbicsICd1bmRlcmxpbmUnKTtcclxuICAgIH1cclxuICAgICAgICBcclxuICAgIHJldHVybiB2YWxpZF9uYW1lICYmIHZhbGlkX3Bob25lICYmIHZhbGlkX3RleHQgJiYgdmFsaWRfZW1haWwgJiYgY2hlY2s7XHJcbiAgfVxyXG5cclxuICBhamF4KGZvcm1EYXRhOmFueSk6IHN0cmluZyB7XHJcbiAgICBsZXQgcmVzcG9uc2U6IHN0cmluZztcclxuXHJcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ3R5cGUnLCB0aGlzLmdldHR5cGUoKSk7XHJcbiAgICBsZXQgbmFtZTpzdHJpbmc7XHJcbiAgICBpZiAoJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSduYW1lJ11cIikubGVuZ3RoICE9IDApIHtcclxuICAgICAgICBuYW1lID0gJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSduYW1lJ11cIikudmFsKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIG5hbWU9XCJubyBuYW1lXCI7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHRleHQ6c3RyaW5nO1xyXG4gICAgaWYgKCQodGhpcy5mb3JtKS5maW5kKFwidGV4dGFyZWFcIikubGVuZ3RoICE9IDApIHtcclxuICAgICAgICB0ZXh0ID0gJCh0aGlzLmZvcm0pLmZpbmQoXCJ0ZXh0YXJlYVwiKS52YWwoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGV4dD1cIm5vIHRleHRcIjtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgZW1haWw6c3RyaW5nO1xyXG4gICAgaWYgKCQodGhpcy5mb3JtKS5maW5kKFwiaW5wdXRbbmFtZT0nZW1haWwnXVwiKS5sZW5ndGggIT0gMCkge1xyXG4gICAgICAgIGVtYWlsID0gJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdlbWFpbCddXCIpLnZhbCgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICBlbWFpbD1cIm5vIGVtYWlsXCI7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IHBob25lID0gJCh0aGlzLmZvcm0pLmZpbmQoXCJpbnB1dFtuYW1lPSdwaG9uZSddXCIpLnZhbCgpO1xyXG5cclxuICAgIGxldCB2YWxpZDpib29sZWFuID0gdGhpcy52YWxpZGF0aW9uKCQodGhpcy5mb3JtKS5hdHRyKCduYW1lJyksIG5hbWUsIHBob25lLCB0ZXh0LCBlbWFpbClcclxuICAgIGlmKHZhbGlkKSB7XHJcbiAgICAgICQuYWpheCh7XHJcbiAgICAgICAgdHlwZTogXCJQT1NUXCIsXHJcbiAgICAgICAgdXJsOiB0aGlzLnVybCxcclxuICAgICAgICBwcm9jZXNzRGF0YTogZmFsc2UsXHJcbiAgICAgICAgY29udGVudFR5cGU6IGZhbHNlLFxyXG4gICAgICAgIGRhdGE6IGZvcm1EYXRhXHJcbiAgICAgIH0pLmRvbmUoZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgICBcclxuICAgICAgICBsZXQgb2JqID0galF1ZXJ5LnBhcnNlSlNPTiggcmVzICk7XHJcblxyXG4gICAgICAgIGxldCB0eXBlPSBvYmoudHlwZTtcclxuICAgICAgICBsZXQgZGF0YUFycmF5ID0gdGhpcy5kYXRhQXJyYXk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgY2FzZSBcItCe0LHRgNCw0YLQvdGL0Lkg0LfQstC+0L3QvtC6XCI6XHJcbiAgICAgICAgICAgIHNob3dTdWNjZXNzQ2FsbGJhY2soKTtcclxuICAgICAgICAgICAgYnJlYWtcclxuICAgICAgICBjYXNlIFwi0J3QvtCy0YvQuSDQt9Cw0LrQsNC3XCI6XHJcbiAgICAgICAgICAgIGxldCBnaWZ0OnN0cmluZyA9IG9iai5naWZ0O1xyXG4gICAgICAgICAgICBsZXQgaXRlbTpzdHJpbmcgPSBvYmouaXRlbTtcclxuICAgICAgICAgICAgbGV0IHByaWNlOnN0cmluZyA9IG9iai5wcmljZTtcclxuICAgICAgICAgICAgbGV0IGltYWdlOnN0cmluZyA9IG9iai5pbWFnZTtcclxuICAgICAgICAgICAgc2hvd1N1Y2Nlc3NPcmRlcihuYW1lLCBnaWZ0LCBpdGVtLCBpbWFnZSwgcHJpY2UpO1xyXG4gICAgICAgICAgICAkKFwiZm9ybVtuYW1lPSdvcmRlciddXCIpLnRyaWdnZXIoJ3Jlc2V0Jyk7XHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgY2FzZSBcItCX0LDQutCw0Lcg0LrQsNGC0LDQu9C+0LPQsFwiOlxyXG4gICAgICAgICAgICBzaG93U3VjY2Vzc0NhdGFsb2coKTtcclxuICAgICAgICAgICAgJChcImZvcm1bbmFtZT0nY2F0YWxvZyddXCIpLnRyaWdnZXIoJ3Jlc2V0Jyk7IFxyXG4gICAgICAgICAgICBicmVha1xyXG4gICAgICAgIGNhc2UgXCLQpNC+0YDQvNCwINCy0L3QuNC30YMg0YHRgtGA0LDQvdC40YbRi1wiOlxyXG4gICAgICAgICAgICBzaG93U3VjY2VzcygpO1xyXG4gICAgICAgICAgICAkKFwiZm9ybVtuYW1lPSdib3R0b21fZm9ybSddXCIpLnRyaWdnZXIoJ3Jlc2V0Jyk7XHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICAgICAgY2FzZSBcItCe0YLQt9GL0LJcIjpcclxuICAgICAgICAgICAgc2hvd1N1Y2Nlc3NSZXZpZXcoKTtcclxuICAgICAgICAgICAgJChcImZvcm1bbmFtZT0ncmV2aWV3J11cIikudHJpZ2dlcigncmVzZXQnKTsgXHJcbiAgICAgICAgICAgIGJyZWFrXHJcbiAgICB9XHJcbiAgICAgICAgICAgICAgXHJcbiAgICAgIH0pLmZhaWwoZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2cocmVzKTtcclxuICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gIH1cclxuXHJcbiAgZ2V0dHlwZSgpOiBzdHJpbmcge1xyXG4gICAgbGV0IHR5cGU7XHJcbiAgICBzd2l0Y2ggKHRoaXMudHlwZSkge1xyXG4gICAgICBjYXNlIFwiY2FsbGJhY2tcIjpcclxuICAgICAgICB0eXBlID0gXCLQntCx0YDQsNGC0L3Ri9C5INC30LLQvtC90L7QulwiOyBcclxuICAgICAgICBicmVha1xyXG4gICAgY2FzZSBcIm9yZGVyX21haW5cIjpcclxuICAgICAgICB0eXBlID0gXCLQl9Cw0LrQsNC3INGBINCx0LDQvdC90LXRgNCwXCI7IFxyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgXCJvcmRlclwiOlxyXG4gICAgICAgIHR5cGUgPSBcItCd0L7QstGL0Lkg0LfQsNC60LDQt1wiOyBcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlIFwiY2F0YWxvZ1wiOlxyXG4gICAgICAgIHR5cGUgPSBcItCX0LDQutCw0Lcg0LrQsNGC0LDQu9C+0LPQsFwiOyBcclxuICAgICAgICBicmVha1xyXG4gICAgICBjYXNlIFwiYm90dG9tX2Zvcm1cIjpcclxuICAgICAgICB0eXBlID0gXCLQpNC+0YDQvNCwINCy0L3QuNC30YMg0YHRgtGA0LDQvdC40YbRi1wiO1xyXG4gICAgICAgIGJyZWFrXHJcbiAgICAgIGNhc2UgXCJyZXZpZXdcIjpcclxuICAgICAgICB0eXBlID0gXCLQntGC0LfRi9CyXCI7XHJcbiAgICAgICAgYnJlYWtcclxuICAgIH1cclxuICByZXR1cm4gdHlwZTtcclxuICB9XHJcbn1cclxuXHJcblxyXG4kKGZ1bmN0aW9uKCkge1xyXG4gICAgICAkKCdmb3JtJykuc3VibWl0KGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7IFxyXG4gICAgICBcclxuICAgICAgICBsZXQgZGF0YUFycmF5ID0gJCh0aGlzKS5zZXJpYWxpemVBcnJheSgpO1xyXG4gICAgICAgIGxldCB0eXBlID0gJCh0aGlzKS5hdHRyKCduYW1lJyk7XHJcbiAgICAgICAgbGV0IHVybCA9ICQodGhpcykuYXR0cignYWN0aW9uJyk7XHJcbiAgICAgICAgbGV0IGZvcm06Rm9ybSA9IG5ldyBGb3JtKHRoaXMsIHVybCwgZGF0YUFycmF5LCB0eXBlKTtcclxuICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEodGhpcyk7XHJcbiAgICAgICAgbGV0IHJlc3BvbnNlID0gZm9ybS5hamF4KGZvcm1EYXRhKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgICAkKCdpbnB1dFt0eXBlPVwiZmlsZVwiXScpLmNoYW5nZShmdW5jdGlvbigpIHtcclxuICAgICAgICBsZXQgdmFsID0gJCh0aGlzKS52YWwoKTtcclxuICAgICAgICBsZXQgcmVnViA9IC9bXlxcXFwvXStcXC5bQS1aYS16XSsvZ2k7IFxyXG4gICAgICAgIGxldCByZXN1bHQgPSB2YWwubWF0Y2gocmVnVik7XHJcbiAgICAgICAgaWYocmVzdWx0ICE9IG51bGwpIHtcclxuICAgICAgICAgICQodGhpcykuc2libGluZ3MoJ3NwYW4nKS5odG1sKHJlc3VsdCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICQodGhpcykuc2libGluZ3MoJ3NwYW4nKS5odG1sKCfQlNC+0LHQsNCy0LjRgtGMINGE0L7RgtC+Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxufSk7ICAgICAgIl0sInNvdXJjZVJvb3QiOiIvc3JjL3RzIn0=
