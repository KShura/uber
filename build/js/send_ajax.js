var Form = (function () {
    function Form(form, url, dataArray, form_type) {
        this.form = form;
        this.url = url;
        this.dataArray = dataArray;
        this.form_type = form_type;
    }
    Form.prototype.validation = function (name, phone) {
        var valid_name = false;
        var valid_phone = false;
        if (phone != "") {
            valid_phone = true;
        }
        if (name != "") {
            valid_name = true;
        }
        if (!valid_name) {
            $(this.form).find("input[name='name']").css('border', '2px solid red');
            $(this.form).find("input[name='name']+.error").css('display', 'block');
        }
        else {
            $(this.form).find("input[name='name']").css('border', '');
            $(this.form).find("input[name='name']+.error").css('display', 'none');
        }
        if (!valid_phone) {
            $(this.form).find("input[name='phone']").css('border', '2px solid red');
            $(this.form).find("input[name='phone']+.error").css('display', 'block');
        }
        else {
            $(this.form).find("input[name='phone']").css('border', '');
            $(this.form).find("input[name='phone']+.error").css('display', 'none');
        }
        return valid_name && valid_phone;
    };
    Form.prototype.ajax = function () {
        var name = $(this.form).find("input[name='name']").val();
        var phone = $(this.form).find("input[name='phone']").val();
        var valid = this.validation(name, phone);
        if (valid) {
            $.ajax({
                type: "POST",
                url: this.url,
                processData: false,
                contentType: false,
                data: this.dataArray
            }).done(function (res) {
                if (res) {
                    showSuccess(this.form_type);
                }
            }).fail(function (res) {
                console.log(res);
            });
        }
    };
    return Form;
}());
$(function () {
    $('form').submit(function (e) {
        e.preventDefault();
        var dataArray = $(this).serializeArray();
        var form_type = $(this).attr('form-type');
        var url = $(this).attr('action');
        var form = new Form(this, url, dataArray, form_type);
        var formData = new FormData(this);
        var response = form.ajax();
    });
    $('input[type="file"]').change(function () {
        var val = $(this).val();
        var regV = /[^\\/]+\.[A-Za-z]+/gi;
        var result = val.match(regV);
        if (result != null) {
            $(this).siblings('span').html(result);
        }
        else {
            $(this).siblings('span').html('Добавить фото');
        }
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
